group = "dev.hebei.camerax_android"
version = "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "1.7.10"
    ext.camerax_version = "1.3.4"
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:7.3.0")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    if (project.android.hasProperty("namespace")) {
        namespace = "dev.hebei.camerax_android"
    }

    compileSdk = 34

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 21
        // Keeping the classes from being removed by proguard.
        consumerProguardFiles 'consumer-rules.pro'
    }

    dependencies {
        // The following line is optional, as the core library is included indirectly by camera-camera2
        api "androidx.camera:camera-core:${camerax_version}"
        api "androidx.camera:camera-camera2:${camerax_version}"
        // If you want to additionally use the CameraX Lifecycle library
        api "androidx.camera:camera-lifecycle:${camerax_version}"
        // If you want to additionally use the CameraX VideoCapture library
        api "androidx.camera:camera-video:${camerax_version}"
        // If you want to additionally use the CameraX View class
        api "androidx.camera:camera-view:${camerax_version}"
        // If you want to additionally add CameraX ML Kit Vision Integration
        // api "androidx.camera:camera-mlkit-vision:${camerax_version}"
        // If you want to additionally use the CameraX Extensions library
        api "androidx.camera:camera-extensions:${camerax_version}"

        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.0.0")
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen { false }
                showStandardStreams = true
            }
        }
    }
}
