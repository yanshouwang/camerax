// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: argument_type_not_assignable
// ignore_for_file: camel_case_extensions
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: doc_directive_unknown
// ignore_for_file: file_names
// ignore_for_file: inference_failure_on_untyped_parameter
// ignore_for_file: invalid_internal_annotation
// ignore_for_file: invalid_use_of_internal_member
// ignore_for_file: library_prefixes
// ignore_for_file: lines_longer_than_80_chars
// ignore_for_file: no_leading_underscores_for_library_prefixes
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: only_throw_errors
// ignore_for_file: overridden_fields
// ignore_for_file: prefer_double_quotes
// ignore_for_file: unintended_html_in_doc_comment
// ignore_for_file: unnecessary_cast
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_local_variable
// ignore_for_file: unused_shown_name
// ignore_for_file: use_super_parameters

import 'dart:core' show Object, String, bool, double, int;
import 'dart:core' as core$_;

import 'package:jni/_internal.dart' as jni$_;
import 'package:jni/jni.dart' as jni$_;

/// from: `dev.hebei.camerax_android.core.DynamicRange$BitDepth`
class DynamicRange$BitDepth extends jni$_.JObject {
  @jni$_.internal
  @core$_.override
  final jni$_.JObjType<DynamicRange$BitDepth> $type;

  @jni$_.internal
  DynamicRange$BitDepth.fromReference(
    jni$_.JReference reference,
  )   : $type = type,
        super.fromReference(reference);

  static final _class = jni$_.JClass.forName(
      r'dev/hebei/camerax_android/core/DynamicRange$BitDepth');

  /// The type which includes information such as the signature of this class.
  static const nullableType = $DynamicRange$BitDepth$NullableType();
  static const type = $DynamicRange$BitDepth$Type();
  static final _id_BIT_DEPTH_UNSPECIFIED = _class.staticFieldId(
    r'BIT_DEPTH_UNSPECIFIED',
    r'Ldev/hebei/camerax_android/core/DynamicRange$BitDepth;',
  );

  /// from: `static public final dev.hebei.camerax_android.core.DynamicRange$BitDepth BIT_DEPTH_UNSPECIFIED`
  /// The returned object must be released after use, by calling the [release] method.
  static DynamicRange$BitDepth? get BIT_DEPTH_UNSPECIFIED =>
      _id_BIT_DEPTH_UNSPECIFIED.get(
          _class, const $DynamicRange$BitDepth$NullableType());

  static final _id_BIT_DEPTH_8_BIT = _class.staticFieldId(
    r'BIT_DEPTH_8_BIT',
    r'Ldev/hebei/camerax_android/core/DynamicRange$BitDepth;',
  );

  /// from: `static public final dev.hebei.camerax_android.core.DynamicRange$BitDepth BIT_DEPTH_8_BIT`
  /// The returned object must be released after use, by calling the [release] method.
  static DynamicRange$BitDepth? get BIT_DEPTH_8_BIT => _id_BIT_DEPTH_8_BIT.get(
      _class, const $DynamicRange$BitDepth$NullableType());

  static final _id_BIT_DEPTH_10_BIT = _class.staticFieldId(
    r'BIT_DEPTH_10_BIT',
    r'Ldev/hebei/camerax_android/core/DynamicRange$BitDepth;',
  );

  /// from: `static public final dev.hebei.camerax_android.core.DynamicRange$BitDepth BIT_DEPTH_10_BIT`
  /// The returned object must be released after use, by calling the [release] method.
  static DynamicRange$BitDepth? get BIT_DEPTH_10_BIT => _id_BIT_DEPTH_10_BIT
      .get(_class, const $DynamicRange$BitDepth$NullableType());

  static final _id_values = _class.staticMethodId(
    r'values',
    r'()[Ldev/hebei/camerax_android/core/DynamicRange$BitDepth;',
  );

  static final _values = jni$_.ProtectedJniExtensions.lookup<
          jni$_.NativeFunction<
              jni$_.JniResult Function(
                jni$_.Pointer<jni$_.Void>,
                jni$_.JMethodIDPtr,
              )>>('globalEnv_CallStaticObjectMethod')
      .asFunction<
          jni$_.JniResult Function(
            jni$_.Pointer<jni$_.Void>,
            jni$_.JMethodIDPtr,
          )>();

  /// from: `static public dev.hebei.camerax_android.core.DynamicRange$BitDepth[] values()`
  /// The returned object must be released after use, by calling the [release] method.
  static jni$_.JArray<DynamicRange$BitDepth?>? values() {
    return _values(_class.reference.pointer, _id_values as jni$_.JMethodIDPtr)
        .object<jni$_.JArray<DynamicRange$BitDepth?>?>(
            const jni$_.JArrayNullableType<DynamicRange$BitDepth?>(
                $DynamicRange$BitDepth$NullableType()));
  }

  static final _id_valueOf = _class.staticMethodId(
    r'valueOf',
    r'(Ljava/lang/String;)Ldev/hebei/camerax_android/core/DynamicRange$BitDepth;',
  );

  static final _valueOf = jni$_.ProtectedJniExtensions.lookup<
              jni$_.NativeFunction<
                  jni$_.JniResult Function(
                      jni$_.Pointer<jni$_.Void>,
                      jni$_.JMethodIDPtr,
                      jni$_.VarArgs<(jni$_.Pointer<jni$_.Void>,)>)>>(
          'globalEnv_CallStaticObjectMethod')
      .asFunction<
          jni$_.JniResult Function(jni$_.Pointer<jni$_.Void>,
              jni$_.JMethodIDPtr, jni$_.Pointer<jni$_.Void>)>();

  /// from: `static public dev.hebei.camerax_android.core.DynamicRange$BitDepth valueOf(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static DynamicRange$BitDepth? valueOf(
    jni$_.JString? string,
  ) {
    final _$string = string?.reference ?? jni$_.jNullReference;
    return _valueOf(_class.reference.pointer, _id_valueOf as jni$_.JMethodIDPtr,
            _$string.pointer)
        .object<DynamicRange$BitDepth?>(
            const $DynamicRange$BitDepth$NullableType());
  }
}

final class $DynamicRange$BitDepth$NullableType
    extends jni$_.JObjType<DynamicRange$BitDepth?> {
  @jni$_.internal
  const $DynamicRange$BitDepth$NullableType();

  @jni$_.internal
  @core$_.override
  String get signature =>
      r'Ldev/hebei/camerax_android/core/DynamicRange$BitDepth;';

  @jni$_.internal
  @core$_.override
  DynamicRange$BitDepth? fromReference(jni$_.JReference reference) =>
      reference.isNull
          ? null
          : DynamicRange$BitDepth.fromReference(
              reference,
            );
  @jni$_.internal
  @core$_.override
  jni$_.JObjType get superType => const jni$_.JObjectType();

  @jni$_.internal
  @core$_.override
  jni$_.JObjType<DynamicRange$BitDepth?> get nullableType => this;

  @jni$_.internal
  @core$_.override
  final superCount = 1;

  @core$_.override
  int get hashCode => ($DynamicRange$BitDepth$NullableType).hashCode;

  @core$_.override
  bool operator ==(Object other) {
    return other.runtimeType == ($DynamicRange$BitDepth$NullableType) &&
        other is $DynamicRange$BitDepth$NullableType;
  }
}

final class $DynamicRange$BitDepth$Type
    extends jni$_.JObjType<DynamicRange$BitDepth> {
  @jni$_.internal
  const $DynamicRange$BitDepth$Type();

  @jni$_.internal
  @core$_.override
  String get signature =>
      r'Ldev/hebei/camerax_android/core/DynamicRange$BitDepth;';

  @jni$_.internal
  @core$_.override
  DynamicRange$BitDepth fromReference(jni$_.JReference reference) =>
      DynamicRange$BitDepth.fromReference(
        reference,
      );
  @jni$_.internal
  @core$_.override
  jni$_.JObjType get superType => const jni$_.JObjectType();

  @jni$_.internal
  @core$_.override
  jni$_.JObjType<DynamicRange$BitDepth?> get nullableType =>
      const $DynamicRange$BitDepth$NullableType();

  @jni$_.internal
  @core$_.override
  final superCount = 1;

  @core$_.override
  int get hashCode => ($DynamicRange$BitDepth$Type).hashCode;

  @core$_.override
  bool operator ==(Object other) {
    return other.runtimeType == ($DynamicRange$BitDepth$Type) &&
        other is $DynamicRange$BitDepth$Type;
  }
}

/// from: `dev.hebei.camerax_android.core.DynamicRange$Encoding`
class DynamicRange$Encoding extends jni$_.JObject {
  @jni$_.internal
  @core$_.override
  final jni$_.JObjType<DynamicRange$Encoding> $type;

  @jni$_.internal
  DynamicRange$Encoding.fromReference(
    jni$_.JReference reference,
  )   : $type = type,
        super.fromReference(reference);

  static final _class = jni$_.JClass.forName(
      r'dev/hebei/camerax_android/core/DynamicRange$Encoding');

  /// The type which includes information such as the signature of this class.
  static const nullableType = $DynamicRange$Encoding$NullableType();
  static const type = $DynamicRange$Encoding$Type();
  static final _id_UNSPECIFIED = _class.staticFieldId(
    r'UNSPECIFIED',
    r'Ldev/hebei/camerax_android/core/DynamicRange$Encoding;',
  );

  /// from: `static public final dev.hebei.camerax_android.core.DynamicRange$Encoding UNSPECIFIED`
  /// The returned object must be released after use, by calling the [release] method.
  static DynamicRange$Encoding? get UNSPECIFIED =>
      _id_UNSPECIFIED.get(_class, const $DynamicRange$Encoding$NullableType());

  static final _id_SDR = _class.staticFieldId(
    r'SDR',
    r'Ldev/hebei/camerax_android/core/DynamicRange$Encoding;',
  );

  /// from: `static public final dev.hebei.camerax_android.core.DynamicRange$Encoding SDR`
  /// The returned object must be released after use, by calling the [release] method.
  static DynamicRange$Encoding? get SDR =>
      _id_SDR.get(_class, const $DynamicRange$Encoding$NullableType());

  static final _id_HDR_UNSPECIFIED = _class.staticFieldId(
    r'HDR_UNSPECIFIED',
    r'Ldev/hebei/camerax_android/core/DynamicRange$Encoding;',
  );

  /// from: `static public final dev.hebei.camerax_android.core.DynamicRange$Encoding HDR_UNSPECIFIED`
  /// The returned object must be released after use, by calling the [release] method.
  static DynamicRange$Encoding? get HDR_UNSPECIFIED => _id_HDR_UNSPECIFIED.get(
      _class, const $DynamicRange$Encoding$NullableType());

  static final _id_HLG = _class.staticFieldId(
    r'HLG',
    r'Ldev/hebei/camerax_android/core/DynamicRange$Encoding;',
  );

  /// from: `static public final dev.hebei.camerax_android.core.DynamicRange$Encoding HLG`
  /// The returned object must be released after use, by calling the [release] method.
  static DynamicRange$Encoding? get HLG =>
      _id_HLG.get(_class, const $DynamicRange$Encoding$NullableType());

  static final _id_HDR10 = _class.staticFieldId(
    r'HDR10',
    r'Ldev/hebei/camerax_android/core/DynamicRange$Encoding;',
  );

  /// from: `static public final dev.hebei.camerax_android.core.DynamicRange$Encoding HDR10`
  /// The returned object must be released after use, by calling the [release] method.
  static DynamicRange$Encoding? get HDR10 =>
      _id_HDR10.get(_class, const $DynamicRange$Encoding$NullableType());

  static final _id_HDR10_PLUS = _class.staticFieldId(
    r'HDR10_PLUS',
    r'Ldev/hebei/camerax_android/core/DynamicRange$Encoding;',
  );

  /// from: `static public final dev.hebei.camerax_android.core.DynamicRange$Encoding HDR10_PLUS`
  /// The returned object must be released after use, by calling the [release] method.
  static DynamicRange$Encoding? get HDR10_PLUS =>
      _id_HDR10_PLUS.get(_class, const $DynamicRange$Encoding$NullableType());

  static final _id_DOLBY_VISION = _class.staticFieldId(
    r'DOLBY_VISION',
    r'Ldev/hebei/camerax_android/core/DynamicRange$Encoding;',
  );

  /// from: `static public final dev.hebei.camerax_android.core.DynamicRange$Encoding DOLBY_VISION`
  /// The returned object must be released after use, by calling the [release] method.
  static DynamicRange$Encoding? get DOLBY_VISION =>
      _id_DOLBY_VISION.get(_class, const $DynamicRange$Encoding$NullableType());

  static final _id_values = _class.staticMethodId(
    r'values',
    r'()[Ldev/hebei/camerax_android/core/DynamicRange$Encoding;',
  );

  static final _values = jni$_.ProtectedJniExtensions.lookup<
          jni$_.NativeFunction<
              jni$_.JniResult Function(
                jni$_.Pointer<jni$_.Void>,
                jni$_.JMethodIDPtr,
              )>>('globalEnv_CallStaticObjectMethod')
      .asFunction<
          jni$_.JniResult Function(
            jni$_.Pointer<jni$_.Void>,
            jni$_.JMethodIDPtr,
          )>();

  /// from: `static public dev.hebei.camerax_android.core.DynamicRange$Encoding[] values()`
  /// The returned object must be released after use, by calling the [release] method.
  static jni$_.JArray<DynamicRange$Encoding?>? values() {
    return _values(_class.reference.pointer, _id_values as jni$_.JMethodIDPtr)
        .object<jni$_.JArray<DynamicRange$Encoding?>?>(
            const jni$_.JArrayNullableType<DynamicRange$Encoding?>(
                $DynamicRange$Encoding$NullableType()));
  }

  static final _id_valueOf = _class.staticMethodId(
    r'valueOf',
    r'(Ljava/lang/String;)Ldev/hebei/camerax_android/core/DynamicRange$Encoding;',
  );

  static final _valueOf = jni$_.ProtectedJniExtensions.lookup<
              jni$_.NativeFunction<
                  jni$_.JniResult Function(
                      jni$_.Pointer<jni$_.Void>,
                      jni$_.JMethodIDPtr,
                      jni$_.VarArgs<(jni$_.Pointer<jni$_.Void>,)>)>>(
          'globalEnv_CallStaticObjectMethod')
      .asFunction<
          jni$_.JniResult Function(jni$_.Pointer<jni$_.Void>,
              jni$_.JMethodIDPtr, jni$_.Pointer<jni$_.Void>)>();

  /// from: `static public dev.hebei.camerax_android.core.DynamicRange$Encoding valueOf(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static DynamicRange$Encoding? valueOf(
    jni$_.JString? string,
  ) {
    final _$string = string?.reference ?? jni$_.jNullReference;
    return _valueOf(_class.reference.pointer, _id_valueOf as jni$_.JMethodIDPtr,
            _$string.pointer)
        .object<DynamicRange$Encoding?>(
            const $DynamicRange$Encoding$NullableType());
  }
}

final class $DynamicRange$Encoding$NullableType
    extends jni$_.JObjType<DynamicRange$Encoding?> {
  @jni$_.internal
  const $DynamicRange$Encoding$NullableType();

  @jni$_.internal
  @core$_.override
  String get signature =>
      r'Ldev/hebei/camerax_android/core/DynamicRange$Encoding;';

  @jni$_.internal
  @core$_.override
  DynamicRange$Encoding? fromReference(jni$_.JReference reference) =>
      reference.isNull
          ? null
          : DynamicRange$Encoding.fromReference(
              reference,
            );
  @jni$_.internal
  @core$_.override
  jni$_.JObjType get superType => const jni$_.JObjectType();

  @jni$_.internal
  @core$_.override
  jni$_.JObjType<DynamicRange$Encoding?> get nullableType => this;

  @jni$_.internal
  @core$_.override
  final superCount = 1;

  @core$_.override
  int get hashCode => ($DynamicRange$Encoding$NullableType).hashCode;

  @core$_.override
  bool operator ==(Object other) {
    return other.runtimeType == ($DynamicRange$Encoding$NullableType) &&
        other is $DynamicRange$Encoding$NullableType;
  }
}

final class $DynamicRange$Encoding$Type
    extends jni$_.JObjType<DynamicRange$Encoding> {
  @jni$_.internal
  const $DynamicRange$Encoding$Type();

  @jni$_.internal
  @core$_.override
  String get signature =>
      r'Ldev/hebei/camerax_android/core/DynamicRange$Encoding;';

  @jni$_.internal
  @core$_.override
  DynamicRange$Encoding fromReference(jni$_.JReference reference) =>
      DynamicRange$Encoding.fromReference(
        reference,
      );
  @jni$_.internal
  @core$_.override
  jni$_.JObjType get superType => const jni$_.JObjectType();

  @jni$_.internal
  @core$_.override
  jni$_.JObjType<DynamicRange$Encoding?> get nullableType =>
      const $DynamicRange$Encoding$NullableType();

  @jni$_.internal
  @core$_.override
  final superCount = 1;

  @core$_.override
  int get hashCode => ($DynamicRange$Encoding$Type).hashCode;

  @core$_.override
  bool operator ==(Object other) {
    return other.runtimeType == ($DynamicRange$Encoding$Type) &&
        other is $DynamicRange$Encoding$Type;
  }
}

/// from: `dev.hebei.camerax_android.core.DynamicRange`
class DynamicRange extends jni$_.JObject {
  @jni$_.internal
  @core$_.override
  final jni$_.JObjType<DynamicRange> $type;

  @jni$_.internal
  DynamicRange.fromReference(
    jni$_.JReference reference,
  )   : $type = type,
        super.fromReference(reference);

  static final _class =
      jni$_.JClass.forName(r'dev/hebei/camerax_android/core/DynamicRange');

  /// The type which includes information such as the signature of this class.
  static const nullableType = $DynamicRange$NullableType();
  static const type = $DynamicRange$Type();
  static final _id_new$ = _class.constructorId(
    r'(Ldev/hebei/camerax_android/core/DynamicRange$Encoding;Ldev/hebei/camerax_android/core/DynamicRange$BitDepth;)V',
  );

  static final _new$ = jni$_.ProtectedJniExtensions.lookup<
          jni$_.NativeFunction<
              jni$_.JniResult Function(
                  jni$_.Pointer<jni$_.Void>,
                  jni$_.JMethodIDPtr,
                  jni$_.VarArgs<
                      (
                        jni$_.Pointer<jni$_.Void>,
                        jni$_.Pointer<jni$_.Void>
                      )>)>>('globalEnv_NewObject')
      .asFunction<
          jni$_.JniResult Function(
              jni$_.Pointer<jni$_.Void>,
              jni$_.JMethodIDPtr,
              jni$_.Pointer<jni$_.Void>,
              jni$_.Pointer<jni$_.Void>)>();

  /// from: `public void <init>(dev.hebei.camerax_android.core.DynamicRange$Encoding encoding, dev.hebei.camerax_android.core.DynamicRange$BitDepth bitDepth)`
  /// The returned object must be released after use, by calling the [release] method.
  factory DynamicRange(
    DynamicRange$Encoding encoding,
    DynamicRange$BitDepth bitDepth,
  ) {
    final _$encoding = encoding.reference;
    final _$bitDepth = bitDepth.reference;
    return DynamicRange.fromReference(_new$(
            _class.reference.pointer,
            _id_new$ as jni$_.JMethodIDPtr,
            _$encoding.pointer,
            _$bitDepth.pointer)
        .reference);
  }

  static final _id_new$1 = _class.constructorId(
    r'(Landroidx/camera/core/DynamicRange;)V',
  );

  static final _new$1 = jni$_.ProtectedJniExtensions.lookup<
              jni$_.NativeFunction<
                  jni$_.JniResult Function(
                      jni$_.Pointer<jni$_.Void>,
                      jni$_.JMethodIDPtr,
                      jni$_.VarArgs<(jni$_.Pointer<jni$_.Void>,)>)>>(
          'globalEnv_NewObject')
      .asFunction<
          jni$_.JniResult Function(jni$_.Pointer<jni$_.Void>,
              jni$_.JMethodIDPtr, jni$_.Pointer<jni$_.Void>)>();

  /// from: `public void <init>(androidx.camera.core.DynamicRange dynamicRange)`
  /// The returned object must be released after use, by calling the [release] method.
  factory DynamicRange.new$1(
    jni$_.JObject dynamicRange,
  ) {
    final _$dynamicRange = dynamicRange.reference;
    return DynamicRange.fromReference(_new$1(_class.reference.pointer,
            _id_new$1 as jni$_.JMethodIDPtr, _$dynamicRange.pointer)
        .reference);
  }

  static final _id_getEncoding = _class.instanceMethodId(
    r'getEncoding',
    r'()Ldev/hebei/camerax_android/core/DynamicRange$Encoding;',
  );

  static final _getEncoding = jni$_.ProtectedJniExtensions.lookup<
          jni$_.NativeFunction<
              jni$_.JniResult Function(
                jni$_.Pointer<jni$_.Void>,
                jni$_.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni$_.JniResult Function(
            jni$_.Pointer<jni$_.Void>,
            jni$_.JMethodIDPtr,
          )>();

  /// from: `public final dev.hebei.camerax_android.core.DynamicRange$Encoding getEncoding()`
  /// The returned object must be released after use, by calling the [release] method.
  DynamicRange$Encoding getEncoding() {
    return _getEncoding(
            reference.pointer, _id_getEncoding as jni$_.JMethodIDPtr)
        .object<DynamicRange$Encoding>(const $DynamicRange$Encoding$Type());
  }

  static final _id_getBitDepth = _class.instanceMethodId(
    r'getBitDepth',
    r'()Ldev/hebei/camerax_android/core/DynamicRange$BitDepth;',
  );

  static final _getBitDepth = jni$_.ProtectedJniExtensions.lookup<
          jni$_.NativeFunction<
              jni$_.JniResult Function(
                jni$_.Pointer<jni$_.Void>,
                jni$_.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni$_.JniResult Function(
            jni$_.Pointer<jni$_.Void>,
            jni$_.JMethodIDPtr,
          )>();

  /// from: `public final dev.hebei.camerax_android.core.DynamicRange$BitDepth getBitDepth()`
  /// The returned object must be released after use, by calling the [release] method.
  DynamicRange$BitDepth getBitDepth() {
    return _getBitDepth(
            reference.pointer, _id_getBitDepth as jni$_.JMethodIDPtr)
        .object<DynamicRange$BitDepth>(const $DynamicRange$BitDepth$Type());
  }
}

final class $DynamicRange$NullableType extends jni$_.JObjType<DynamicRange?> {
  @jni$_.internal
  const $DynamicRange$NullableType();

  @jni$_.internal
  @core$_.override
  String get signature => r'Ldev/hebei/camerax_android/core/DynamicRange;';

  @jni$_.internal
  @core$_.override
  DynamicRange? fromReference(jni$_.JReference reference) => reference.isNull
      ? null
      : DynamicRange.fromReference(
          reference,
        );
  @jni$_.internal
  @core$_.override
  jni$_.JObjType get superType => const jni$_.JObjectType();

  @jni$_.internal
  @core$_.override
  jni$_.JObjType<DynamicRange?> get nullableType => this;

  @jni$_.internal
  @core$_.override
  final superCount = 1;

  @core$_.override
  int get hashCode => ($DynamicRange$NullableType).hashCode;

  @core$_.override
  bool operator ==(Object other) {
    return other.runtimeType == ($DynamicRange$NullableType) &&
        other is $DynamicRange$NullableType;
  }
}

final class $DynamicRange$Type extends jni$_.JObjType<DynamicRange> {
  @jni$_.internal
  const $DynamicRange$Type();

  @jni$_.internal
  @core$_.override
  String get signature => r'Ldev/hebei/camerax_android/core/DynamicRange;';

  @jni$_.internal
  @core$_.override
  DynamicRange fromReference(jni$_.JReference reference) =>
      DynamicRange.fromReference(
        reference,
      );
  @jni$_.internal
  @core$_.override
  jni$_.JObjType get superType => const jni$_.JObjectType();

  @jni$_.internal
  @core$_.override
  jni$_.JObjType<DynamicRange?> get nullableType =>
      const $DynamicRange$NullableType();

  @jni$_.internal
  @core$_.override
  final superCount = 1;

  @core$_.override
  int get hashCode => ($DynamicRange$Type).hashCode;

  @core$_.override
  bool operator ==(Object other) {
    return other.runtimeType == ($DynamicRange$Type) &&
        other is $DynamicRange$Type;
  }
}
