// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: argument_type_not_assignable
// ignore_for_file: camel_case_extensions
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: doc_directive_unknown
// ignore_for_file: file_names
// ignore_for_file: inference_failure_on_untyped_parameter
// ignore_for_file: invalid_internal_annotation
// ignore_for_file: invalid_use_of_internal_member
// ignore_for_file: library_prefixes
// ignore_for_file: lines_longer_than_80_chars
// ignore_for_file: no_leading_underscores_for_library_prefixes
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: only_throw_errors
// ignore_for_file: overridden_fields
// ignore_for_file: prefer_double_quotes
// ignore_for_file: unintended_html_in_doc_comment
// ignore_for_file: unnecessary_cast
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_local_variable
// ignore_for_file: unused_shown_name
// ignore_for_file: use_super_parameters

import 'dart:core' show Object, String, bool, double, int;
import 'dart:core' as core$_;

import 'package:jni/_internal.dart' as jni$_;
import 'package:jni/jni.dart' as jni$_;

import '../AspectRatio.dart' as aspectratio$_;

/// from: `dev.hebei.camerax_android.core.resolutionselector.AspectRatioStrategy$Companion`
class AspectRatioStrategy$Companion extends jni$_.JObject {
  @jni$_.internal
  @core$_.override
  final jni$_.JObjType<AspectRatioStrategy$Companion> $type;

  @jni$_.internal
  AspectRatioStrategy$Companion.fromReference(
    jni$_.JReference reference,
  )   : $type = type,
        super.fromReference(reference);

  static final _class = jni$_.JClass.forName(
      r'dev/hebei/camerax_android/core/resolutionselector/AspectRatioStrategy$Companion');

  /// The type which includes information such as the signature of this class.
  static const nullableType = $AspectRatioStrategy$Companion$NullableType();
  static const type = $AspectRatioStrategy$Companion$Type();
  static final _id_getRATIO_16_9_FALLBACK_AUTO_STRATEGY =
      _class.instanceMethodId(
    r'getRATIO_16_9_FALLBACK_AUTO_STRATEGY',
    r'()Ldev/hebei/camerax_android/core/resolutionselector/AspectRatioStrategy;',
  );

  static final _getRATIO_16_9_FALLBACK_AUTO_STRATEGY =
      jni$_.ProtectedJniExtensions.lookup<
              jni$_.NativeFunction<
                  jni$_.JniResult Function(
                    jni$_.Pointer<jni$_.Void>,
                    jni$_.JMethodIDPtr,
                  )>>('globalEnv_CallObjectMethod')
          .asFunction<
              jni$_.JniResult Function(
                jni$_.Pointer<jni$_.Void>,
                jni$_.JMethodIDPtr,
              )>();

  /// from: `public final dev.hebei.camerax_android.core.resolutionselector.AspectRatioStrategy getRATIO_16_9_FALLBACK_AUTO_STRATEGY()`
  /// The returned object must be released after use, by calling the [release] method.
  AspectRatioStrategy getRATIO_16_9_FALLBACK_AUTO_STRATEGY() {
    return _getRATIO_16_9_FALLBACK_AUTO_STRATEGY(reference.pointer,
            _id_getRATIO_16_9_FALLBACK_AUTO_STRATEGY as jni$_.JMethodIDPtr)
        .object<AspectRatioStrategy>(const $AspectRatioStrategy$Type());
  }

  static final _id_getRATIO_4_3_FALLBACK_AUTO_STRATEGY =
      _class.instanceMethodId(
    r'getRATIO_4_3_FALLBACK_AUTO_STRATEGY',
    r'()Ldev/hebei/camerax_android/core/resolutionselector/AspectRatioStrategy;',
  );

  static final _getRATIO_4_3_FALLBACK_AUTO_STRATEGY =
      jni$_.ProtectedJniExtensions.lookup<
              jni$_.NativeFunction<
                  jni$_.JniResult Function(
                    jni$_.Pointer<jni$_.Void>,
                    jni$_.JMethodIDPtr,
                  )>>('globalEnv_CallObjectMethod')
          .asFunction<
              jni$_.JniResult Function(
                jni$_.Pointer<jni$_.Void>,
                jni$_.JMethodIDPtr,
              )>();

  /// from: `public final dev.hebei.camerax_android.core.resolutionselector.AspectRatioStrategy getRATIO_4_3_FALLBACK_AUTO_STRATEGY()`
  /// The returned object must be released after use, by calling the [release] method.
  AspectRatioStrategy getRATIO_4_3_FALLBACK_AUTO_STRATEGY() {
    return _getRATIO_4_3_FALLBACK_AUTO_STRATEGY(reference.pointer,
            _id_getRATIO_4_3_FALLBACK_AUTO_STRATEGY as jni$_.JMethodIDPtr)
        .object<AspectRatioStrategy>(const $AspectRatioStrategy$Type());
  }

  static final _id_new$ = _class.constructorId(
    r'(Lkotlin/jvm/internal/DefaultConstructorMarker;)V',
  );

  static final _new$ = jni$_.ProtectedJniExtensions.lookup<
              jni$_.NativeFunction<
                  jni$_.JniResult Function(
                      jni$_.Pointer<jni$_.Void>,
                      jni$_.JMethodIDPtr,
                      jni$_.VarArgs<(jni$_.Pointer<jni$_.Void>,)>)>>(
          'globalEnv_NewObject')
      .asFunction<
          jni$_.JniResult Function(jni$_.Pointer<jni$_.Void>,
              jni$_.JMethodIDPtr, jni$_.Pointer<jni$_.Void>)>();

  /// from: `synthetic public void <init>(kotlin.jvm.internal.DefaultConstructorMarker defaultConstructorMarker)`
  /// The returned object must be released after use, by calling the [release] method.
  factory AspectRatioStrategy$Companion(
    jni$_.JObject? defaultConstructorMarker,
  ) {
    final _$defaultConstructorMarker =
        defaultConstructorMarker?.reference ?? jni$_.jNullReference;
    return AspectRatioStrategy$Companion.fromReference(_new$(
            _class.reference.pointer,
            _id_new$ as jni$_.JMethodIDPtr,
            _$defaultConstructorMarker.pointer)
        .reference);
  }
}

final class $AspectRatioStrategy$Companion$NullableType
    extends jni$_.JObjType<AspectRatioStrategy$Companion?> {
  @jni$_.internal
  const $AspectRatioStrategy$Companion$NullableType();

  @jni$_.internal
  @core$_.override
  String get signature =>
      r'Ldev/hebei/camerax_android/core/resolutionselector/AspectRatioStrategy$Companion;';

  @jni$_.internal
  @core$_.override
  AspectRatioStrategy$Companion? fromReference(jni$_.JReference reference) =>
      reference.isNull
          ? null
          : AspectRatioStrategy$Companion.fromReference(
              reference,
            );
  @jni$_.internal
  @core$_.override
  jni$_.JObjType get superType => const jni$_.JObjectType();

  @jni$_.internal
  @core$_.override
  jni$_.JObjType<AspectRatioStrategy$Companion?> get nullableType => this;

  @jni$_.internal
  @core$_.override
  final superCount = 1;

  @core$_.override
  int get hashCode => ($AspectRatioStrategy$Companion$NullableType).hashCode;

  @core$_.override
  bool operator ==(Object other) {
    return other.runtimeType == ($AspectRatioStrategy$Companion$NullableType) &&
        other is $AspectRatioStrategy$Companion$NullableType;
  }
}

final class $AspectRatioStrategy$Companion$Type
    extends jni$_.JObjType<AspectRatioStrategy$Companion> {
  @jni$_.internal
  const $AspectRatioStrategy$Companion$Type();

  @jni$_.internal
  @core$_.override
  String get signature =>
      r'Ldev/hebei/camerax_android/core/resolutionselector/AspectRatioStrategy$Companion;';

  @jni$_.internal
  @core$_.override
  AspectRatioStrategy$Companion fromReference(jni$_.JReference reference) =>
      AspectRatioStrategy$Companion.fromReference(
        reference,
      );
  @jni$_.internal
  @core$_.override
  jni$_.JObjType get superType => const jni$_.JObjectType();

  @jni$_.internal
  @core$_.override
  jni$_.JObjType<AspectRatioStrategy$Companion?> get nullableType =>
      const $AspectRatioStrategy$Companion$NullableType();

  @jni$_.internal
  @core$_.override
  final superCount = 1;

  @core$_.override
  int get hashCode => ($AspectRatioStrategy$Companion$Type).hashCode;

  @core$_.override
  bool operator ==(Object other) {
    return other.runtimeType == ($AspectRatioStrategy$Companion$Type) &&
        other is $AspectRatioStrategy$Companion$Type;
  }
}

/// from: `dev.hebei.camerax_android.core.resolutionselector.AspectRatioStrategy$FallbackRule`
class AspectRatioStrategy$FallbackRule extends jni$_.JObject {
  @jni$_.internal
  @core$_.override
  final jni$_.JObjType<AspectRatioStrategy$FallbackRule> $type;

  @jni$_.internal
  AspectRatioStrategy$FallbackRule.fromReference(
    jni$_.JReference reference,
  )   : $type = type,
        super.fromReference(reference);

  static final _class = jni$_.JClass.forName(
      r'dev/hebei/camerax_android/core/resolutionselector/AspectRatioStrategy$FallbackRule');

  /// The type which includes information such as the signature of this class.
  static const nullableType = $AspectRatioStrategy$FallbackRule$NullableType();
  static const type = $AspectRatioStrategy$FallbackRule$Type();
  static final _id_NONE = _class.staticFieldId(
    r'NONE',
    r'Ldev/hebei/camerax_android/core/resolutionselector/AspectRatioStrategy$FallbackRule;',
  );

  /// from: `static public final dev.hebei.camerax_android.core.resolutionselector.AspectRatioStrategy$FallbackRule NONE`
  /// The returned object must be released after use, by calling the [release] method.
  static AspectRatioStrategy$FallbackRule? get NONE => _id_NONE.get(
      _class, const $AspectRatioStrategy$FallbackRule$NullableType());

  static final _id_AUTO = _class.staticFieldId(
    r'AUTO',
    r'Ldev/hebei/camerax_android/core/resolutionselector/AspectRatioStrategy$FallbackRule;',
  );

  /// from: `static public final dev.hebei.camerax_android.core.resolutionselector.AspectRatioStrategy$FallbackRule AUTO`
  /// The returned object must be released after use, by calling the [release] method.
  static AspectRatioStrategy$FallbackRule? get AUTO => _id_AUTO.get(
      _class, const $AspectRatioStrategy$FallbackRule$NullableType());

  static final _id_values = _class.staticMethodId(
    r'values',
    r'()[Ldev/hebei/camerax_android/core/resolutionselector/AspectRatioStrategy$FallbackRule;',
  );

  static final _values = jni$_.ProtectedJniExtensions.lookup<
          jni$_.NativeFunction<
              jni$_.JniResult Function(
                jni$_.Pointer<jni$_.Void>,
                jni$_.JMethodIDPtr,
              )>>('globalEnv_CallStaticObjectMethod')
      .asFunction<
          jni$_.JniResult Function(
            jni$_.Pointer<jni$_.Void>,
            jni$_.JMethodIDPtr,
          )>();

  /// from: `static public dev.hebei.camerax_android.core.resolutionselector.AspectRatioStrategy$FallbackRule[] values()`
  /// The returned object must be released after use, by calling the [release] method.
  static jni$_.JArray<AspectRatioStrategy$FallbackRule?>? values() {
    return _values(_class.reference.pointer, _id_values as jni$_.JMethodIDPtr)
        .object<jni$_.JArray<AspectRatioStrategy$FallbackRule?>?>(
            const jni$_.JArrayNullableType<AspectRatioStrategy$FallbackRule?>(
                $AspectRatioStrategy$FallbackRule$NullableType()));
  }

  static final _id_valueOf = _class.staticMethodId(
    r'valueOf',
    r'(Ljava/lang/String;)Ldev/hebei/camerax_android/core/resolutionselector/AspectRatioStrategy$FallbackRule;',
  );

  static final _valueOf = jni$_.ProtectedJniExtensions.lookup<
              jni$_.NativeFunction<
                  jni$_.JniResult Function(
                      jni$_.Pointer<jni$_.Void>,
                      jni$_.JMethodIDPtr,
                      jni$_.VarArgs<(jni$_.Pointer<jni$_.Void>,)>)>>(
          'globalEnv_CallStaticObjectMethod')
      .asFunction<
          jni$_.JniResult Function(jni$_.Pointer<jni$_.Void>,
              jni$_.JMethodIDPtr, jni$_.Pointer<jni$_.Void>)>();

  /// from: `static public dev.hebei.camerax_android.core.resolutionselector.AspectRatioStrategy$FallbackRule valueOf(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static AspectRatioStrategy$FallbackRule? valueOf(
    jni$_.JString? string,
  ) {
    final _$string = string?.reference ?? jni$_.jNullReference;
    return _valueOf(_class.reference.pointer, _id_valueOf as jni$_.JMethodIDPtr,
            _$string.pointer)
        .object<AspectRatioStrategy$FallbackRule?>(
            const $AspectRatioStrategy$FallbackRule$NullableType());
  }
}

final class $AspectRatioStrategy$FallbackRule$NullableType
    extends jni$_.JObjType<AspectRatioStrategy$FallbackRule?> {
  @jni$_.internal
  const $AspectRatioStrategy$FallbackRule$NullableType();

  @jni$_.internal
  @core$_.override
  String get signature =>
      r'Ldev/hebei/camerax_android/core/resolutionselector/AspectRatioStrategy$FallbackRule;';

  @jni$_.internal
  @core$_.override
  AspectRatioStrategy$FallbackRule? fromReference(jni$_.JReference reference) =>
      reference.isNull
          ? null
          : AspectRatioStrategy$FallbackRule.fromReference(
              reference,
            );
  @jni$_.internal
  @core$_.override
  jni$_.JObjType get superType => const jni$_.JObjectType();

  @jni$_.internal
  @core$_.override
  jni$_.JObjType<AspectRatioStrategy$FallbackRule?> get nullableType => this;

  @jni$_.internal
  @core$_.override
  final superCount = 1;

  @core$_.override
  int get hashCode => ($AspectRatioStrategy$FallbackRule$NullableType).hashCode;

  @core$_.override
  bool operator ==(Object other) {
    return other.runtimeType ==
            ($AspectRatioStrategy$FallbackRule$NullableType) &&
        other is $AspectRatioStrategy$FallbackRule$NullableType;
  }
}

final class $AspectRatioStrategy$FallbackRule$Type
    extends jni$_.JObjType<AspectRatioStrategy$FallbackRule> {
  @jni$_.internal
  const $AspectRatioStrategy$FallbackRule$Type();

  @jni$_.internal
  @core$_.override
  String get signature =>
      r'Ldev/hebei/camerax_android/core/resolutionselector/AspectRatioStrategy$FallbackRule;';

  @jni$_.internal
  @core$_.override
  AspectRatioStrategy$FallbackRule fromReference(jni$_.JReference reference) =>
      AspectRatioStrategy$FallbackRule.fromReference(
        reference,
      );
  @jni$_.internal
  @core$_.override
  jni$_.JObjType get superType => const jni$_.JObjectType();

  @jni$_.internal
  @core$_.override
  jni$_.JObjType<AspectRatioStrategy$FallbackRule?> get nullableType =>
      const $AspectRatioStrategy$FallbackRule$NullableType();

  @jni$_.internal
  @core$_.override
  final superCount = 1;

  @core$_.override
  int get hashCode => ($AspectRatioStrategy$FallbackRule$Type).hashCode;

  @core$_.override
  bool operator ==(Object other) {
    return other.runtimeType == ($AspectRatioStrategy$FallbackRule$Type) &&
        other is $AspectRatioStrategy$FallbackRule$Type;
  }
}

/// from: `dev.hebei.camerax_android.core.resolutionselector.AspectRatioStrategy`
class AspectRatioStrategy extends jni$_.JObject {
  @jni$_.internal
  @core$_.override
  final jni$_.JObjType<AspectRatioStrategy> $type;

  @jni$_.internal
  AspectRatioStrategy.fromReference(
    jni$_.JReference reference,
  )   : $type = type,
        super.fromReference(reference);

  static final _class = jni$_.JClass.forName(
      r'dev/hebei/camerax_android/core/resolutionselector/AspectRatioStrategy');

  /// The type which includes information such as the signature of this class.
  static const nullableType = $AspectRatioStrategy$NullableType();
  static const type = $AspectRatioStrategy$Type();
  static final _id_Companion = _class.staticFieldId(
    r'Companion',
    r'Ldev/hebei/camerax_android/core/resolutionselector/AspectRatioStrategy$Companion;',
  );

  /// from: `static public final dev.hebei.camerax_android.core.resolutionselector.AspectRatioStrategy$Companion Companion`
  /// The returned object must be released after use, by calling the [release] method.
  static AspectRatioStrategy$Companion? get Companion => _id_Companion.get(
      _class, const $AspectRatioStrategy$Companion$NullableType());

  static final _id_new$ = _class.constructorId(
    r'(Landroidx/camera/core/resolutionselector/AspectRatioStrategy;)V',
  );

  static final _new$ = jni$_.ProtectedJniExtensions.lookup<
              jni$_.NativeFunction<
                  jni$_.JniResult Function(
                      jni$_.Pointer<jni$_.Void>,
                      jni$_.JMethodIDPtr,
                      jni$_.VarArgs<(jni$_.Pointer<jni$_.Void>,)>)>>(
          'globalEnv_NewObject')
      .asFunction<
          jni$_.JniResult Function(jni$_.Pointer<jni$_.Void>,
              jni$_.JMethodIDPtr, jni$_.Pointer<jni$_.Void>)>();

  /// from: `public void <init>(androidx.camera.core.resolutionselector.AspectRatioStrategy aspectRatioStrategy)`
  /// The returned object must be released after use, by calling the [release] method.
  factory AspectRatioStrategy(
    jni$_.JObject aspectRatioStrategy,
  ) {
    final _$aspectRatioStrategy = aspectRatioStrategy.reference;
    return AspectRatioStrategy.fromReference(_new$(_class.reference.pointer,
            _id_new$ as jni$_.JMethodIDPtr, _$aspectRatioStrategy.pointer)
        .reference);
  }

  static final _id_new$1 = _class.constructorId(
    r'(Ldev/hebei/camerax_android/core/AspectRatio;Ldev/hebei/camerax_android/core/resolutionselector/AspectRatioStrategy$FallbackRule;)V',
  );

  static final _new$1 = jni$_.ProtectedJniExtensions.lookup<
          jni$_.NativeFunction<
              jni$_.JniResult Function(
                  jni$_.Pointer<jni$_.Void>,
                  jni$_.JMethodIDPtr,
                  jni$_.VarArgs<
                      (
                        jni$_.Pointer<jni$_.Void>,
                        jni$_.Pointer<jni$_.Void>
                      )>)>>('globalEnv_NewObject')
      .asFunction<
          jni$_.JniResult Function(
              jni$_.Pointer<jni$_.Void>,
              jni$_.JMethodIDPtr,
              jni$_.Pointer<jni$_.Void>,
              jni$_.Pointer<jni$_.Void>)>();

  /// from: `public void <init>(dev.hebei.camerax_android.core.AspectRatio aspectRatio, dev.hebei.camerax_android.core.resolutionselector.AspectRatioStrategy$FallbackRule fallbackRule)`
  /// The returned object must be released after use, by calling the [release] method.
  factory AspectRatioStrategy.new$1(
    aspectratio$_.AspectRatio aspectRatio,
    AspectRatioStrategy$FallbackRule fallbackRule,
  ) {
    final _$aspectRatio = aspectRatio.reference;
    final _$fallbackRule = fallbackRule.reference;
    return AspectRatioStrategy.fromReference(_new$1(
            _class.reference.pointer,
            _id_new$1 as jni$_.JMethodIDPtr,
            _$aspectRatio.pointer,
            _$fallbackRule.pointer)
        .reference);
  }

  static final _id_getFallbackRule = _class.instanceMethodId(
    r'getFallbackRule',
    r'()Ldev/hebei/camerax_android/core/resolutionselector/AspectRatioStrategy$FallbackRule;',
  );

  static final _getFallbackRule = jni$_.ProtectedJniExtensions.lookup<
          jni$_.NativeFunction<
              jni$_.JniResult Function(
                jni$_.Pointer<jni$_.Void>,
                jni$_.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni$_.JniResult Function(
            jni$_.Pointer<jni$_.Void>,
            jni$_.JMethodIDPtr,
          )>();

  /// from: `public final dev.hebei.camerax_android.core.resolutionselector.AspectRatioStrategy$FallbackRule getFallbackRule()`
  /// The returned object must be released after use, by calling the [release] method.
  AspectRatioStrategy$FallbackRule getFallbackRule() {
    return _getFallbackRule(
            reference.pointer, _id_getFallbackRule as jni$_.JMethodIDPtr)
        .object<AspectRatioStrategy$FallbackRule>(
            const $AspectRatioStrategy$FallbackRule$Type());
  }

  static final _id_getPreferredAspectRatio = _class.instanceMethodId(
    r'getPreferredAspectRatio',
    r'()Ldev/hebei/camerax_android/core/AspectRatio;',
  );

  static final _getPreferredAspectRatio = jni$_.ProtectedJniExtensions.lookup<
          jni$_.NativeFunction<
              jni$_.JniResult Function(
                jni$_.Pointer<jni$_.Void>,
                jni$_.JMethodIDPtr,
              )>>('globalEnv_CallObjectMethod')
      .asFunction<
          jni$_.JniResult Function(
            jni$_.Pointer<jni$_.Void>,
            jni$_.JMethodIDPtr,
          )>();

  /// from: `public final dev.hebei.camerax_android.core.AspectRatio getPreferredAspectRatio()`
  /// The returned object must be released after use, by calling the [release] method.
  aspectratio$_.AspectRatio getPreferredAspectRatio() {
    return _getPreferredAspectRatio(reference.pointer,
            _id_getPreferredAspectRatio as jni$_.JMethodIDPtr)
        .object<aspectratio$_.AspectRatio>(
            const aspectratio$_.$AspectRatio$Type());
  }
}

final class $AspectRatioStrategy$NullableType
    extends jni$_.JObjType<AspectRatioStrategy?> {
  @jni$_.internal
  const $AspectRatioStrategy$NullableType();

  @jni$_.internal
  @core$_.override
  String get signature =>
      r'Ldev/hebei/camerax_android/core/resolutionselector/AspectRatioStrategy;';

  @jni$_.internal
  @core$_.override
  AspectRatioStrategy? fromReference(jni$_.JReference reference) =>
      reference.isNull
          ? null
          : AspectRatioStrategy.fromReference(
              reference,
            );
  @jni$_.internal
  @core$_.override
  jni$_.JObjType get superType => const jni$_.JObjectType();

  @jni$_.internal
  @core$_.override
  jni$_.JObjType<AspectRatioStrategy?> get nullableType => this;

  @jni$_.internal
  @core$_.override
  final superCount = 1;

  @core$_.override
  int get hashCode => ($AspectRatioStrategy$NullableType).hashCode;

  @core$_.override
  bool operator ==(Object other) {
    return other.runtimeType == ($AspectRatioStrategy$NullableType) &&
        other is $AspectRatioStrategy$NullableType;
  }
}

final class $AspectRatioStrategy$Type
    extends jni$_.JObjType<AspectRatioStrategy> {
  @jni$_.internal
  const $AspectRatioStrategy$Type();

  @jni$_.internal
  @core$_.override
  String get signature =>
      r'Ldev/hebei/camerax_android/core/resolutionselector/AspectRatioStrategy;';

  @jni$_.internal
  @core$_.override
  AspectRatioStrategy fromReference(jni$_.JReference reference) =>
      AspectRatioStrategy.fromReference(
        reference,
      );
  @jni$_.internal
  @core$_.override
  jni$_.JObjType get superType => const jni$_.JObjectType();

  @jni$_.internal
  @core$_.override
  jni$_.JObjType<AspectRatioStrategy?> get nullableType =>
      const $AspectRatioStrategy$NullableType();

  @jni$_.internal
  @core$_.override
  final superCount = 1;

  @core$_.override
  int get hashCode => ($AspectRatioStrategy$Type).hashCode;

  @core$_.override
  bool operator ==(Object other) {
    return other.runtimeType == ($AspectRatioStrategy$Type) &&
        other is $AspectRatioStrategy$Type;
  }
}
